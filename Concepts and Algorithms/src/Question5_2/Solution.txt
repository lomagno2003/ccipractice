/*
 * The representation of decimal fractional numbers is similar to the representation
 * of binary fractional numbers, in decimal, 0.65 is just 0*10¹ + 6*10⁻¹ + 5*10⁻².
 * In binary is the same, 0.101 = 0*2⁰+1*2⁻¹+0*2⁻²+1*2⁻³ = 0.625.
 * So, to convert a decimal fraction to its binary representation we just have to
 * start adding 2^(-i) iteratively, if the actual sum plus the new exceeds the decimal
 * number, we avoid that number, and keep going with the i+1. The binary number
 * would be the 1s that doesn't exceed the decimal number.
 */
 
 public String toBinary(Double num){
 	if(num<1){
 		String result = "0.";
 		
 		//Buffer
 		Double buffer=0.0;
 		for(int i=1;i<32;i++){
 			Double aux = Math.pwr(2,-1*i);
 			
 			if(buffer+aux<=num){
 				buffer+=aux;
 				result+="1";
 			} else {
 				result+="0";
 			}
 			
 			if(buffer.equals(num)){
 				return result;
 			}
 		}
 	}
 	
 	return "ERROR";
 }